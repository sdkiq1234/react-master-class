{"version":3,"sources":["api.ts","routes/Chart.tsx","routes/Price.tsx","routes/Coin.tsx","routes/Coins.tsx","Router.tsx","theme.ts","App.tsx","index.tsx"],"names":["BASE_URL","fetchCoins","fetch","then","response","json","Chart","coinId","useQuery","endDate","Math","floor","Date","now","startDate","fetchCoinHistory","refetchInterval","isLoading","data","console","log","type","series","map","price","x","time_open","y","open","toFixed","high","low","close","options","chart","toolbar","show","height","width","background","xaxis","labels","axisTicks","axisBorder","yaxis","grid","theme","mode","Container","styled","div","DataBox","DataName","span","Data","Price","tickersData","quotes","USD","market_cap","percent_change_1h","percent_change_24h","Title","h1","props","accentColor","Loader","Header","header","Overview","OverviewItem","Description","p","Tabs","Tab","isActive","textColor","Btn","button","Coin","useParams","state","useLocation","priceMatch","useMatch","chartMatch","fetchCoinInfo","infoLoading","infoData","fetchCoinTickers","tickersLoading","loading","Helmet","name","to","rank","symbol","description","total_supply","max_supply","path","element","CoinsList","ul","li","bgColor","Img","img","Coins","slice","coin","id","src","toLowerCase","Router","dark","light","GlobalStyle","createGlobalStyle","Wrapper","Button","App","useState","themeMode","setThemeMode","onClick","initialIsOpen","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"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","file":"static/js/main.07a50f95.chunk.js","sourcesContent":["const BASE_URL = `https://api.coinpaprika.com/v1`;\n\nexport function fetchCoins() {\n  return fetch(`${BASE_URL}/coins`).then((response) => response.json());\n}\n\nexport function fetchCoinInfo(coinId: string) {\n  return fetch(`${BASE_URL}/coins/${coinId}`).then((response) =>\n    response.json()\n  );\n}\nexport function fetchCoinTickers(coinId: string) {\n  return fetch(`${BASE_URL}/tickers/${coinId}`).then((response) =>\n    response.json()\n  );\n}\nexport function fetchCoinHistory(coinId: string) {\n  const endDate = Math.floor(Date.now() / 1000);\n  const startDate = endDate - 60 * 60 * 24 * 7 * 2;\n  return fetch(\n    `${BASE_URL}/coins/${coinId}/ohlcv/historical?start=${startDate}&end=${endDate}`\n  ).then((response) => response.json());\n}\n","import ApexChart from \"react-apexcharts\";\nimport { useQuery } from \"react-query\";\nimport { fetchCoinHistory } from \"../api\";\n\ninterface IHistorical {\n  time_open: string;\n  time_close: string;\n  open: number;\n  high: number;\n  low: number;\n  close: number;\n  volume: number;\n  market_cap: number;\n}\n\ninterface ChartProps {\n  coinId: string;\n}\nfunction Chart({ coinId }: ChartProps) {\n  const { isLoading, data } = useQuery<IHistorical[]>(\n    [\"ohlcv\", coinId],\n    () => fetchCoinHistory(coinId),\n    {\n      refetchInterval: 10000,\n    }\n  );\n  console.log(data);\n  return (\n    <div>\n      {isLoading ? (\n        \"Loading chart...\"\n      ) : (\n        <ApexChart\n          type=\"candlestick\"\n          series={[\n            {\n              data: data?.map((price) => ({\n                x: new Date(price.time_open),\n                y: [\n                  price.open.toFixed(2),\n                  price.high.toFixed(2),\n                  price.low.toFixed(2),\n                  price.close.toFixed(2),\n                ],\n              })),\n            },\n          ]}\n          options={{\n            chart: {\n              toolbar: {\n                show: false,\n              },\n              height: 400,\n              width: 480,\n              background: \"transparent\",\n            },\n            xaxis: {\n              type: \"datetime\",\n              labels: {\n                show: false,\n              },\n              axisTicks: { show: false },\n              axisBorder: { show: false },\n            },\n            yaxis: {\n              show: false,\n            },\n            grid: {\n              show: false,\n            },\n            theme: {\n              mode: \"dark\",\n            },\n          }}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Chart;\n","import styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100%;\n  display: block;\n`;\n\nconst DataBox = styled.div`\n  display: flex;\n  margin: 0 auto;\n  width: 90%;\n  height: 50px;\n  background-color: white;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0 30px;\n  border-radius: 15px;\n  margin-bottom: 10px;\n`;\n\nconst DataName = styled.span`\n  color: black;\n`;\n\nconst Data = styled.span`\n  color: green;\n  font-size: 20px;\n`;\n\ninterface PriceProps {\n  tickersData: any;\n}\n\nfunction Price({ tickersData }: PriceProps) {\n  console.log(tickersData);\n  return (\n    <Container>\n      <DataBox>\n        <DataName>Price</DataName>\n        <Data>{tickersData.quotes.USD.price.toFixed(2)}</Data>\n      </DataBox>\n      <DataBox>\n        <DataName>Market Capacity</DataName>\n        <Data>{tickersData.quotes.USD.market_cap}</Data>\n      </DataBox>\n      <DataBox>\n        <DataName>Change in 1h</DataName>\n        <Data>{tickersData.quotes.USD.percent_change_1h}</Data>\n      </DataBox>\n      <DataBox>\n        <DataName>Change in 1d</DataName>\n        <Data>{tickersData.quotes.USD.percent_change_24h}</Data>\n      </DataBox>\n    </Container>\n  );\n}\n\nexport default Price;\n","// import { useEffect, useState } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { useQuery } from \"react-query\";\nimport { Routes, Route, useLocation, useParams } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport { useMatch } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { fetchCoinInfo, fetchCoinTickers } from \"../api\";\nimport Chart from \"./Chart\";\nimport Price from \"./Price\";\n\nconst Title = styled.h1`\n  font-size: 48px;\n  color: ${(props) => props.theme.accentColor};\n`;\n\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`;\n\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst Header = styled.header`\n  position: relative;\n  height: 15vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Overview = styled.div`\n  display: flex;\n  justify-content: space-between;\n  background-color: rgba(0, 0, 0, 0.5);\n  padding: 10px 20px;\n  border-radius: 10px;\n`;\n\nconst OverviewItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 33%;\n  span:first-child {\n    font-size: 10px;\n    font-weight: 400;\n    text-transform: uppercase;\n    margin-bottom: 5px;\n  }\n`;\n\nconst Description = styled.p`\n  margin: 20px 0px;\n`;\n\nconst Tabs = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  margin: 25px 0px;\n  gap: 10px;\n`;\n\nconst Tab = styled.span<{ isActive: boolean }>`\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 12px;\n  font-weight: 400;\n  background-color: rgba(0, 0, 0, 0.5);\n\n  border-radius: 10px;\n  color: ${(props) =>\n    props.isActive ? props.theme.accentColor : props.theme.textColor};\n  a {\n    display: block;\n    padding: 7px 0px;\n  }\n`;\n\nconst Btn = styled.button`\n  all: unset;\n  position: absolute;\n  left: 10px;\n  top: 50px;\n  padding: 12px;\n  border: 1px solid white;\n  border-radius: 15%;\n  &:hover {\n    color: black;\n    background-color: white;\n  }\n`;\n\ninterface RouteParams {\n  coinId: string;\n}\n// interface RouteState {\n//   name: string;\n// }\n\ninterface InfoData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n  contract: string;\n  platform: string;\n  description: string;\n  message: string;\n  open_source: boolean;\n  started_at: Date;\n  development_status: string;\n  hardware_wallet: boolean;\n  proof_type: string;\n  org_structure: string;\n  hash_algorithm: string;\n  first_data_at: Date;\n  last_data_at: Date;\n}\n\ninterface PriceData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  circulating_supply: number;\n  total_supply: number;\n  max_supply: number;\n  beta_value: number;\n  first_data_at: Date;\n  last_updated: Date;\n  quotes: {\n    USD: {\n      price: number;\n      volume_24h: number;\n      volume_24h_change_24h: number;\n      market_cap: number;\n      market_cap_change_24h: number;\n      percent_change_15m: number;\n      percent_change_30m: number;\n      percent_change_1h: number;\n      percent_change_6h: number;\n      percent_change_12h: number;\n      percent_change_24h: number;\n      percent_change_7d: number;\n      percent_change_30d: number;\n      percent_change_1y: number;\n      ath_price: number;\n      ath_date: Date;\n      percent_from_price_ath: number;\n    };\n  };\n}\n\nfunction Coin() {\n  const { coinId } = useParams() as RouteParams;\n  const { state } = useLocation();\n  // const [loading, setLoading] = useState(true);\n  // const [info, setInfo] = useState<InfoData>();\n  // const [priceInfo, setPriceInfo] = useState<PriceData>();\n  const priceMatch = useMatch(\"/:coinId/price\");\n  const chartMatch = useMatch(\"/:coinId/chart\");\n  // useEffect(() => {\n  //   (async () => {\n  //     const infoData = await (\n  //       await fetch(`https://api.coinpaprika.com/v1/coins/${coinId}`)\n  //     ).json();\n  //     const priceData = await (\n  //       await fetch(`https://api.coinpaprika.com/v1/tickers/${coinId}`)\n  //     ).json();\n  //     setInfo(infoData);\n  //     setPriceInfo(priceData);\n  //     setLoading(false);\n  //   })();\n  // }, [coinId]);\n  const { isLoading: infoLoading, data: infoData } = useQuery<InfoData>(\n    [\"info\", coinId],\n    () => fetchCoinInfo(coinId)\n  );\n  const { isLoading: tickersLoading, data: tickersData } = useQuery<PriceData>(\n    [\"tickers\", coinId],\n    () => fetchCoinTickers(coinId),\n    {\n      refetchInterval: 5000,\n    }\n  );\n  const loading = infoLoading || tickersLoading;\n  return (\n    <Container>\n      <Helmet>\n        <title>\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\n        </title>\n      </Helmet>\n      <Header>\n        <Link to={\"/\"}>\n          <Btn>Home</Btn>\n        </Link>\n        <Title>\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\n        </Title>\n      </Header>\n      {loading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <>\n          <Overview>\n            <OverviewItem>\n              <span>Rank:</span>\n              <span>{infoData?.rank}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Symbol:</span>\n              <span>{infoData?.symbol}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Price:</span>\n              <span>{tickersData?.quotes.USD.price.toFixed(3)}</span>\n            </OverviewItem>\n          </Overview>\n          <Description>{infoData?.description}</Description>\n          <Overview>\n            <OverviewItem>\n              <span>Total Supply:</span>\n              <span>{tickersData?.total_supply}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Max Supply:</span>\n              <span>{tickersData?.max_supply}</span>\n            </OverviewItem>\n          </Overview>\n          <Tabs>\n            <Tab isActive={chartMatch !== null}>\n              <Link to={`/${coinId}/chart`}>Chart</Link>\n            </Tab>\n            <Tab isActive={priceMatch !== null}>\n              <Link to={`/${coinId}/price`}>Price</Link>\n            </Tab>\n          </Tabs>\n          <Routes>\n            <Route path=\"chart\" element={<Chart coinId={coinId} />} />\n            <Route path=\"price\" element={<Price tickersData={tickersData} />} />\n          </Routes>\n        </>\n      )}\n    </Container>\n  );\n}\nexport default Coin;\n","// import { useEffect, useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { fetchCoins } from \"../api\";\n\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst Header = styled.header`\n  height: 15vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst CoinsList = styled.ul``;\n\nconst Coin = styled.li`\n  background-color: white;\n  color: ${(props) => props.theme.bgColor};\n  border-radius: 15px;\n  margin-bottom: 10px;\n  a {\n    display: flex;\n    align-items: center;\n    padding: 20px;\n    transition: color 0.2s ease-in;\n  }\n  &:hover {\n    a {\n      color: ${(props) => props.theme.accentColor};\n    }\n  }\n`;\n\nconst Title = styled.h1`\n  font-size: 48px;\n  color: ${(props) => props.theme.accentColor};\n`;\n\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`;\n\nconst Img = styled.img`\n  width: 35px;\n  height: 35px;\n  margin-right: 10px;\n`;\n\ninterface ICoin {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n}\n\nfunction Coins() {\n  // const [coins, setCoins] = useState<ICoin[]>([]);\n  // const [loading, setLoading] = useState(true);\n  // useEffect(() => {\n  //   (async () => {\n  //     const response = await fetch(\"https://api.coinpaprika.com/v1/coins\");\n  //     const json = await response.json();\n  //     setCoins(json.slice(0, 100));\n  //     setLoading(false);\n  //   })();\n  // }, []);\n  const { isLoading, data } = useQuery<ICoin[]>(\"allCoins\", fetchCoins);\n  return (\n    <Container>\n      <Header>\n        <Title>코인</Title>\n      </Header>\n      {isLoading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <CoinsList>\n          {data?.slice(0, 100).map((coin) => (\n            <Coin key={coin.id}>\n              <Link to={`/${coin.id}`} state={{ name: coin.name }}>\n                <Img\n                  src={`https://cryptoicon-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`}\n                />\n                {coin.name} &rarr;\n              </Link>\n            </Coin>\n          ))}\n        </CoinsList>\n      )}\n    </Container>\n  );\n}\nexport default Coins;\n","import { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Coin from \"./routes/Coin\";\nimport Coins from \"./routes/Coins\";\n\nfunction Router() {\n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route path=\"/:coinId/*\" element={<Coin />} />\n        <Route path=\"/\" element={<Coins />} />\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default Router;\n","import { DefaultTheme } from \"styled-components\";\n\nexport const dark: DefaultTheme = {\n  bgColor: \"#2f3640\",\n  textColor: \"#f5f6fa\",\n  accentColor: \"#4cd137\",\n};\n\nexport const light: DefaultTheme = {\n  bgColor: \"#white\",\n  textColor: \"black\",\n  accentColor: \"red\",\n};\n","import { createGlobalStyle } from \"styled-components\";\nimport Router from \"./Router\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\nimport { ThemeProvider } from \"styled-components\";\nimport { light, dark } from \"./theme\";\nimport { useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-weight:300;\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color:${(props) => props.theme.bgColor};\n  color:${(props) => props.theme.textColor};\n  line-height: 1.2;\n}\na {\n  text-decoration:none;\n  color: inherit;\n}\n`;\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: 10%;\n  display: flex;\n  position: relative;\n`;\n\nconst Button = styled.button`\n  all: unset;\n  display: block;\n  position: absolute;\n  width: 95px;\n  height: 25px;\n  font-size: 12px;\n  border: 2px solid red;\n  text-align: center;\n  background-color: blue;\n  color: white;\n  border-radius: 10px;\n  right: 200px;\n  top: 45px;\n`;\n\nfunction App() {\n  const [themeMode, setThemeMode] = useState(\"light\");\n  const theme = themeMode === \"light\" ? light : dark;\n  const toggleTheme = () =>\n    setThemeMode(themeMode === \"light\" ? \"dark\" : \"light\");\n  return (\n    <ThemeProvider theme={theme}>\n      <Wrapper>\n        <Button onClick={toggleTheme}>Theme change</Button>\n      </Wrapper>\n      <GlobalStyle />\n      <Router />\n      <ReactQueryDevtools initialIsOpen={true} />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport App from \"./App\";\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <App />\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}